# -*- coding: utf-8 -*-
"""Data_690_HW_2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ucs5iwho2J_qfbf7WxfWfEZxfjc_GDuA

# Data 690 - Assignment 2
**Objective** - This assignment allows the user to enter 10 integers of their choices. If they enter a data that is not an integer then they will get an error message that ehy must enter an integer and will be given another option till they enter an integer. 
Following that step where the user enters 10 digits in a list, the user will get the maximum value entered, minimum value, range, mean, standard deviation and variance.

## Part 1 - User Inputs data
This is the part where we look use a list known as the inputList to store the data that the user entered. 
- The for loop is used to allow the user to enter an integer data 10 times. 
- The while loop, try and except statement is used to check if the user entered an integer.
  - The while loop is used to check if the try condition is true and the try condition checks if the user entered data is an integer. 
    - If the entetred data is an *integer* then the inputList will allow the integer to be appended. 
    - If the entered data is *not an integer* then we would get an error and the user would be prompted to enter an integer.
"""

#This list will store the users entered data
inputList = []

#This for loop will be used to prompt the user to enter 10 values.
for i in range(10):
  #The while loop will check if the case in the try statement will be true.
  while True:
      """ 
      This try case will prompt an user to enter and integer and check if it as integer. 
      The list would append it if it is an integer. It would break the loop as an integer 
      would be entered for that specific iteration.
      """
      try:
          userInput = int(input("Please enter an integer:"))
          inputList.append(userInput)
          break
      
      #The except condition will give an exception case where it will say that the value entered is not an integer
      #and will prompt the user to enter a number once again. That is why we have the "continue" term. 
      except:
          print("Enter an integer please. Examples are: 1, 2, 3..")
          continue  
print("You list of numbers are:", inputList)

"""## Part 2 - Finding maximum number in the list
**Method Name** - maxNumber
- This method will create a maximum variable and use it to test the order of all other numbers.
- The for loop will *iterate* through the list and check if an element in the list is larger than the max variable and accordingly it would set that *specific value in the max variable*. 
  - Therefore, it would end up selecting the *largest number* in the list.
"""

"""
This method will take the user entered list in the parameter and 
try to find the largest number in the list. 
"""
def maxNumber(numList): 
  #This variable will be used to test and find the largest number.
  max = 0
  #The for loop will check each element int he list and if it is
  #larger than the value in the max value then it would store that
  #value in the max variable.
  for i in numList:
      if i > max: 
        max = i

  #prints out the maximum value.
  print("The maximum number that you entered was:", max)

"""## Part 3 - Finding minimum number in the list
**Method Name** - minNumber
- This method will create a min variable and use it to test the order of all other numbers.
  - The min value would store the last element in the NumList(list). 
- The for loop will *iterate* through the list and check if a list value is less than the value stored in min variable and accordingly it would set that *specific value in the min variable*. 
  - Therefore, it would end up selecting the *smallest number* in the list.
"""

"""
This method will take the user entered list in the parameter and 
try to find the smallest number in the list.
"""
def minNumber(numList): 
  """
  This variable will be used to test and find the smallest number. 
  It will initially take the lest element in the number list.
  """
  min = numList[len(numList)-1]
  """
  We use the for loop to take each data from the last element to the first
  and then we compare it with the min value. If the element is less than 
  the min value then that elements value will replace the min value.
  """
  for i in inputList[::-1]:
      if i < min: 
        min = i

  #prints the minimum value
  print("The minimum number that you entered was:", min)

"""## Part 4 - Finding the smallest number in the user entered list
**Method Name** - minNumber
- This method will create a min variable and use it to test the order of all other numbers.
  - The min value would store the last element in the NumList(list). 
- The for loop will *iterate* through the list and check if a list value is less than the value stored in min variable and accordingly it would set that *specific value in the min variable*. 
  - Therefore, it would end up selecting the *smallest number* in the list.
"""

"""
This method will take the largest number in the list and 
then it will subtract it by the smallest number to get the
range value.
"""
def rangeList(numList):
  #We take the range and max as a test value and set it to 0.
  range = 0
  max = 0
  # The min value is stored as the last element in numList for testing purposes.
  min = numList[len(numList)-1]
  """
  We compare each element in for loop with max value to see which one is higher
  and if a specific element is higher then we set that to the max value.
  """
  for i in numList:
      if i > max: 
        max = i
  """
  We compare each element in for loop with min value to see which one is lower
  and if a specific element is less then we set that to the min value.
  """
  for j in inputList[::-1]:
      if j < min: 
        min = j

  #The range is calculated as the max value minus the min value.
  range = max - min

  #We output the range.
  print("The range of the data you entered is:", range)

"""## Part 5 - Finding the mean of the numbers entered in the user entered list
**Method Name** - meanList
- This method will add each of the elements in user entered list and divide it by the count of the numbers. 
  - For example, if the total number was 100 and only 5 numbers were entered in the list then the mean would be 100/5 which would be 20. ***Mean*** also means the average.
"""

"""
This method will take the sum of all elements in the
list and divide it by the count of the elements numbers in the 
list in order to get the mean or the average. 
"""
def meanList(numList):
  #variable used as a sum variable which we will use to store the sum of each element.
  sum = 0
  #We take each element in the user entered list and add it up to find the sum of all elements.
  for i in numList:
    sum += i

  #We divide the total sum by the length or count of the the user entered list to get the mean.
  mean = sum/len(numList)

  #We output the result of the mean or the average.
  print("The mean of the data you entered is:", mean)

"""## Part 6 - Finding the standard deviation of the numbers entered in the user entered list
**Method Name** - numStdDeviation
- This method will retrieve the standard devation of all items in the user entered list.
- **Formula** - Square root of(sum of (each elment in list - mean of list)^2 / count or length of the list)
  - *Steps to retrieve the standard deviation.*
  - *Step 1*: Add all elements in the list.
  - *Step 2*: Divide that sum by the count of how many elements are in the list.
  - *Step 3*: Subtract the mean from each of the elements in the list fint he square of each of the elements. Then add up all of them to find sum - *sumstddev* variable in my code below.
  - *Step 4*: Divide the length or count of the list by the sum from step 3 or *sumstddev* and find the square root of that to retrieve the *standard deviation*.
"""

"""
This method is used to retrieve the standard devation of all items in the user entered list.
The formula for the standard deviation is : Square root of(sum of (each elment in list - mean of list)^2 / count or length of the list)
"""
def numStdDeviation(numList):
  sum = 0
  sumstddev = 0
  stddev = 0
  #for loop used to find the sum to retrieve the mean.
  for i in numList:
      sum += i

  #the length of the user entered list would be divided by sum to retrieve the mean
  mean = sum/len(numList)

  #this foor loop is used to find the sum of (each element in the list and subtract it by the mean)^2
  for i in numList:
      sumstddev += ((i - mean)**2)

  """
  The standard deviation is retrieved by dividing the sumstnddevaition retrieved from last 
  for loop by the count of numList and finding the square root of that value. 
  """
  stddev = (sumstddev/len(numList))**(1/2)

  #prints the standard devaiation value
  print("The standard deviation of the data you entered is:", round(stddev, 2))

"""## Part 6 - Finding the variance of the numbers entered in the user entered list.
**Method Name** - numStdDeviation
- This method will retrieve the variance of all items in the user entered list.
  The variance is retrived by getting the square of the standard deviation or the standard deviation to the power of 2.
- **Formula** - Square root of(sum of (each elment in list - mean of list)^2 / count or length of the list)
  - *Steps to retrieve the standard deviation.*
  - *Step 1*: Add all elements in the list.
  - *Step 2*: Divide that sum by the count of how many elements are in the list.
  - *Step 3*: Subtract the mean from each of the elements in the list fint he square of each of the elements. Then add up all of them to find sum - *sumstddev* variable in my code below.
  - *Step 4*: Divide the length or count of the list by the sum from step 3 or *sumstddev* and find the square root of that to retrieve the *standard deviation*.
  - *Step 5*: This is the only *additional* step to find **Variance**. We have to find the square of the *standard devaition* or set that to the power of 2.
"""

"""
This method is used to retrieve the variance of all items in the user entered list. The formula for the variance is :
The square of the standard deviation. We use the same steps we used to retrieve the standard deviation in the previous 
numStdDeviation method and we retrieve the square of that. 
"""
def numVariance(numList):

  sum = 0
  sumstddev = 0
  stddev = 0 
  variance = 0
    
  #for loop used to find the sum to retrieve the mean.
  for i in numList:
      sum += i

  #the mean is the retrieved sum of the elements in the list divided by the length or count of the elements in the list.
  mean = sum/len(numList)

  #this foor loop is used to find the sum of (each element in the list and subtract it by the mean)^2
  for i in numList:
      sumstddev += ((i - mean)**2)

  """
  The standard deviation is retrieved by dividing the sumstnddevaition retrieved from last 
  for loop by the count of numList and finding the square root of that value. 
  """ 
  stddev = (sumstddev/len(numList))**(1/2)

  #The variance will be retrieved by calculating the square of the standard deviation or to the power of 2.
  variance = stddev**2

  #We print the variance and round it to the closes two decimal places.
  print("The variance of the data you entered is:", round(variance, 2))

"""# Part 6 - Calling all of the methods to check each value."""

#Calls the maxNumber method to see the maximum values entered by the user.
maxNumber(inputList)
#Calls the minNumber method to see the minimum values entered by the user.
minNumber(inputList)
#Calls the rangeList method to see the range of the values entered by the user.
rangeList(inputList)
#Calls the meanList method to see the mean of the values entered by the user.
meanList(inputList)
#Calls the numStdDeviation method to see the standard deviation of the values entered by the user.
numStdDeviation(inputList)
#Calls the numVariance method to see the variance of the values entered by the user.
numVariance(inputList)